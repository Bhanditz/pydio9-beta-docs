Installation
============

Download Archive
****************

Grab the archive for your architecture from one of the link below:

Linux - 64bits
https://download.pydio.com/pub/pydio9/techpreview1/pydio9-techpreview1-linux64.tar.gz

MacOSX - 64bits
https://download.pydio.com/pub/pydio9/techpreview1/pydio9-techpreview1-darwin64.tar.gz

Extract the content somewhere in your server.

Install Backend
***************

Open a terminal and go to the folder where you've extracted your content.

Run the binary pydio to trigger the installation wizard that will run you through multiple configuration steps

License
.......

Read through the license agreement, then press (y) and enter to agree the terms and continue

Database configuration
......................

This will be the default MySQL / MariaDB database that will be use to store your different configurations and data. You have the choice between the different ways the app connect to your database :

- tcp: a standard tcp connection. The wizard will then ask you the Database Hostname, Port and Name as well as the User / Password used to identify permission rights.
- socket: connection via a socket file created by the mysql instances. The wizard will ask you for the Location of this socket file, the Database Name and the User / Password used to identify permission rights.
- manual: for advanced use, you can enter the full DSN manually.

Upon submission, the wizard will attempt a connection to the database to check if your details are correct. It will display an error if a connection could not be made and the program will exit. You can retry by reloading the binary and modifying your connection details.

Datasource configuration
........................

This will be the default datasource where the automatic files generated by the pydio app will be stored (thumbnails, files versioning, ...). It will also create a folder where you can store your own data and which will be available in the Pydio Frontend. You can have as many datasources as you want and we will see later how you can set them up in the front end. However the default datasource is unique.

The wizard will ask you how to name and where to store your datasource (by default it will use a folder within the application data dir following the standard naming for your OS)

The wizard will also ask you which port number you want to use to access your datasource as an S3 API. It is important that no other application run and listen on this port so make sure it is available. The wizard will make a check that no application is bound at the time the wizard is running.

External configuration
......................

The wizard will ask you to confim or enter the different public ports that will be used by the frontend to access the different Pydio services (cf Introduction_)

.. _Introduction: intro.html

The wizard will also ask you to confirm the OpenID Connect ID and Secret that have been generated for you. Those are necessary to identify your application as trusted by the OpenID Connect service.



Summary
.......

The summary is there to give you a full view of what you have entered during this installation process. **It is important that you make a note of all that information because the frontend wizard will ask you to confirm this information in the next step**.

.. _started:
Start pydio services
********************

Once the wizard has successfully run, you can start the services by running the binary with the start command.

.. code:: bash

    ./pydio start

You can use multiple arguments and flags to define your own starting strategy but to get going we recommend starting everything in one go. You can also make use of supervisord_ for ease of use.

Install Frontend
****************

Setup a webserver (with php enabled) that serves the content of the folder *frontend* of the archive and access it via your favourite browser.

If you have error messages indicating that the frontend has problems connecting, then ensure that the backend services are correctly started_. Refer to the troubleshooting_ section if you need.

.. _troubleshooting: troubleshooting.html

Follow the different steps of the installation wizard. All information you need was dislayed in the summary of the backend installation or in the file pydio.json you can find in the Application Data Dir.

After installing, connect to your app and go the Settings page. From there, you can add a new workspace in the Workspaces section.

The only options you need to give to configure is the path of the root node to use. Starting with the datasource, use the autocomplete to browse through the folders and files and choose the root node to use for this specific workspace. You can set as many root nodes as you want per workspace.

You can also create, update or delete datasources in the "Manage datasources" section. Once setup and once the application has finished indexing the files that are present in the datasource, you can use any file of this new datasource as a root node to a workspace

.. _supervisord:
Using Supervisord
*****************

If you want your pydio services to automatically start or restart, you can use supervisord to simplify the task. Refer to this page_ for details of configuration

.. _page: http://supervisord.org/

A simple configuration example for setting up pydio as a supervisord subprocess would be like :

.. code:: bash

    [program:pydio]
    command=/Users/ghecquet/go/src/github.com/pydio/services/pydio start
    redirect_stderr=true
